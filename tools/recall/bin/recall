#!/usr/bin/env python3

import argparse
from pathlib import Path

from llm_memory.store.chroma_store import ChromaStore

def main():
    parser = argparse.ArgumentParser(description="Search long-term memory")
    parser.add_argument("memory_area", choices=["core", "human", "archival", "all"],
                       help="Area to search for memories")
    parser.add_argument("query", help="Search query")
    parser.add_argument("--limit", type=int, default=5,
                       help="Maximum number of results (default: 5)")
    parser.add_argument("--memory-dir", type=str,
                       default=str(Path.home() / ".memory"),
                       help="Directory for storing memories (default: ~/.memory)")
    
    args = parser.parse_args()
    memory_dir = Path(args.memory_dir).expanduser().resolve()
    
    store = ChromaStore(persist_directory=str(memory_dir))
    results = store.search(args.query, args.memory_area, args.limit)
    
    for i, result in enumerate(results, 1):
        memory = result.memory
        relevance_pct = int(result.relevance * 100)
        print(f"\n{i}. {memory.title} ({memory.memory_area}) - {relevance_pct}% relevant")
        print(f"   Created: {memory.created_at.isoformat()}")
        print(f"   Content: {memory.text}")

if __name__ == "__main__":
    main()
